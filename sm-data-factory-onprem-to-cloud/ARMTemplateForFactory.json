{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory Name",
			"defaultValue": "sm-data-factory-onprem-to-cloud"
		},
		"AzureBlobStorage_LinkedService_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage_LinkedService'"
		},
		"AzureBlob_HDInsight_LinkedService_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlob_HDInsight_LinkedService'"
		},
		"HDInsight_Linked_Service_clusterPassword": {
			"type": "secureString",
			"metadata": "Secure string for 'clusterPassword' of 'HDInsight_Linked_Service'"
		},
		"HDInsight_Linked_Service_clusterSshPassword": {
			"type": "secureString",
			"metadata": "Secure string for 'clusterSshPassword' of 'HDInsight_Linked_Service'"
		},
		"HDInsight_Linked_Service_servicePrincipalKey": {
			"type": "secureString",
			"metadata": "Secure string for 'servicePrincipalKey' of 'HDInsight_Linked_Service'"
		},
		"OnPrem_MySQL_Linked_Service_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'OnPrem_MySQL_Linked_Service'"
		},
		"Address_Blob_Storage_properties_typeProperties_fileName": {
			"type": "string",
			"defaultValue": "@concat('Address-',pipeline().RunId, '.txt')"
		},
		"Address_Blob_Storage_properties_typeProperties_folderPath": {
			"type": "string",
			"defaultValue": "sm-onprem-to-cloud-source/address"
		},
		"Customer_Blob_Storage_properties_typeProperties_fileName": {
			"type": "string",
			"defaultValue": "@concat('Customer-',pipeline().RunId, '.txt')"
		},
		"Customer_Blob_Storage_properties_typeProperties_folderPath": {
			"type": "string",
			"defaultValue": "sm-onprem-to-cloud-source/customer"
		},
		"DeleteHiveOutputFolders_properties_typeProperties_fileName": {
			"type": "string",
			"defaultValue": ""
		},
		"DeleteHiveOutputFolders_properties_typeProperties_folderPath": {
			"type": "string",
			"defaultValue": "sm-hive-output"
		},
		"DeletePigOutputFolders_properties_typeProperties_folderPath": {
			"type": "string",
			"defaultValue": "sm-pig-output"
		},
		"Film_Blob_Storage_properties_typeProperties_fileName": {
			"type": "string",
			"defaultValue": "@concat('Film-',pipeline().RunId, '.txt')"
		},
		"Film_Blob_Storage_properties_typeProperties_folderPath": {
			"type": "string",
			"defaultValue": "sm-onprem-to-cloud-source/film"
		},
		"HiveOutputOverdueFiles_properties_typeProperties_fileName": {
			"type": "string",
			"defaultValue": ""
		},
		"HiveOutputOverdueFiles_properties_typeProperties_folderPath": {
			"type": "string",
			"defaultValue": "sm-hive-output/overdue-dvds"
		},
		"Inventory_Blob_Storage_properties_typeProperties_fileName": {
			"type": "string",
			"defaultValue": "@concat('Inventory-',pipeline().RunId, '.txt')"
		},
		"Inventory_Blob_Storage_properties_typeProperties_folderPath": {
			"type": "string",
			"defaultValue": "sm-onprem-to-cloud-source/Inventory"
		},
		"PigAddressOutputFile_properties_typeProperties_fileName": {
			"type": "string",
			"defaultValue": ""
		},
		"PigAddressOutputFile_properties_typeProperties_folderPath": {
			"type": "string",
			"defaultValue": "sm-pig-output/address"
		},
		"Rental_Blob_Storage_properties_typeProperties_fileName": {
			"type": "string",
			"defaultValue": "@concat('Rental-',pipeline().RunId, '.txt')"
		},
		"Rental_Blob_Storage_properties_typeProperties_folderPath": {
			"type": "string",
			"defaultValue": "sm-onprem-to-cloud-source/rental"
		},
		"HDInsight_Linked_Service_properties_typeProperties_hostSubscriptionId": {
			"type": "string",
			"defaultValue": "a001c005-dea7-42da-9342-bc1c11fc44aa"
		},
		"HDInsight_Linked_Service_properties_typeProperties_clusterResourceGroup": {
			"type": "string",
			"defaultValue": "sm-onprem-to-cloud"
		},
		"HDInsight_Linked_Service_properties_typeProperties_servicePrincipalId": {
			"type": "string",
			"defaultValue": "b95c7d38-884f-4598-bd9e-ceb03200d855"
		},
		"HDInsight_Linked_Service_properties_typeProperties_tenant": {
			"type": "string",
			"defaultValue": "404b1967-6507-45ab-8a6d-7374a3f478be"
		},
		"HDInsight_Linked_Service_properties_typeProperties_clusterUserName": {
			"type": "string",
			"defaultValue": "suvendu"
		},
		"HDInsight_Linked_Service_properties_typeProperties_clusterSshUserName": {
			"type": "string",
			"defaultValue": "sshuser"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/MySQLToBlobToHDInsight')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Film_Table",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 2,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RelationalSource",
								"query": "select * from `film`"
							},
							"sink": {
								"type": "BlobSink"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "Film_OnPrem",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Film_Blob_Storage",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Customer_Table",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RelationalSource",
								"query": "select * from `customer`"
							},
							"sink": {
								"type": "BlobSink"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "Customer_OnPrem",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Customer_Blob_Storage",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Inventory_Table",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 2,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RelationalSource",
								"query": "select * from `inventory`"
							},
							"sink": {
								"type": "BlobSink"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "Inventory_OnPrem",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Inventory_Blob_Storage",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Rental_Table",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RelationalSource",
								"query": "select * from `rental`"
							},
							"sink": {
								"type": "BlobSink"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "Rental_OnPrem",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Rental_Blob_Storage",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Address_Table",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RelationalSource",
								"query": "select address_id,address, address2 ,\ndistrict ,\ncity_id ,\npostal_code,\nphone\n from `address`"
							},
							"sink": {
								"type": "BlobSink"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "Address_OnPrem",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Address_Blob_Storage",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Pig_Data_Transfrm",
						"type": "HDInsightPig",
						"dependsOn": [
							{
								"activity": "Film_Table",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Customer_Table",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Inventory_Table",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Rental_Table",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "DeletePigOutputIfExists",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"scriptPath": "sm-scripts/pig-scripts/data-factory-pig-script.pig",
							"defines": {
								"InputCustomer": "wasbs://sm-onprem-to-cloud-source@sm1storageaccount1.blob.core.windows.net/customer/",
								"InputFilm": "wasbs://sm-onprem-to-cloud-source@sm1storageaccount1.blob.core.windows.net/film/",
								"InputInventory": "wasbs://sm-onprem-to-cloud-source@sm1storageaccount1.blob.core.windows.net/Inventory/",
								"InputRental": "wasbs://sm-onprem-to-cloud-source@sm1storageaccount1.blob.core.windows.net/rental/",
								"InputAddress": "wasbs://sm-onprem-to-cloud-source@sm1storageaccount1.blob.core.windows.net/address/",
								"OutputCustomer": "wasbs://sm-pig-output@sm1storageaccount1.blob.core.windows.net/customer/",
								"OutputFilm": "wasbs://sm-pig-output@sm1storageaccount1.blob.core.windows.net/film/",
								"OutputInventory": "wasbs://sm-pig-output@sm1storageaccount1.blob.core.windows.net/inventory/",
								"OutputRental": "wasbs://sm-pig-output@sm1storageaccount1.blob.core.windows.net/rental/",
								"OutputAddress": "wasbs://sm-pig-output@sm1storageaccount1.blob.core.windows.net/address/"
							},
							"scriptLinkedService": {
								"referenceName": "AzureBlobStorage_LinkedService",
								"type": "LinkedServiceReference"
							}
						},
						"linkedServiceName": {
							"referenceName": "HDInsight_Linked_Service",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Overdue_Dvds_Hive",
						"type": "HDInsightHive",
						"dependsOn": [
							{
								"activity": "HiveOutputFolders",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"scriptPath": "sm-scripts/hive-scripts/data-factory-hive-script.hql",
							"defines": {
								"inputcustomertable": "wasbs://sm-pig-output@sm1storageaccount1.blob.core.windows.net/customer/",
								"inputfilmtable": "wasbs://sm-pig-output@sm1storageaccount1.blob.core.windows.net/film/",
								"inputinventorytable": "wasbs://sm-pig-output@sm1storageaccount1.blob.core.windows.net/inventory/",
								"inputrentaltable": "wasbs://sm-pig-output@sm1storageaccount1.blob.core.windows.net/rental/",
								"inputaddresstable": "wasbs://sm-pig-output@sm1storageaccount1.blob.core.windows.net/address/",
								"outputoverduetable": "wasbs://sm-hive-output@sm1storageaccount1.blob.core.windows.net/overdue-dvds/"
							},
							"scriptLinkedService": {
								"referenceName": "AzureBlobStorage_LinkedService",
								"type": "LinkedServiceReference"
							}
						},
						"linkedServiceName": {
							"referenceName": "HDInsight_Linked_Service",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "HiveOutputFolders",
						"description": "It will delete all hive output folders from Blob storage",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "DeleteHiveOutputIfExists",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DeleteHiveOutputFolders",
								"type": "DatasetReference",
								"parameters": {}
							},
							"recursive": true,
							"logStorageSettings": {
								"linkedServiceName": {
									"referenceName": "AzureBlobStorage_LinkedService",
									"type": "LinkedServiceReference"
								},
								"path": "delete-logs"
							},
							"enableLogging": true
						}
					},
					{
						"name": "DeletePigOutputIfExists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "AddressDataExists",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@activity('AddressDataExists').output.exists",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "PigOutputFolders",
									"description": "It will delete all pig output folders from Blob storage",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "DeletePigOutputFolders",
											"type": "DatasetReference",
											"parameters": {}
										},
										"recursive": true,
										"logStorageSettings": {
											"linkedServiceName": {
												"referenceName": "AzureBlobStorage_LinkedService",
												"type": "LinkedServiceReference"
											},
											"path": "delete-logs"
										},
										"enableLogging": true
									}
								}
							]
						}
					},
					{
						"name": "AddressDataExists",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "Address_Table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "PigAddressOutputFile",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"exists"
							]
						}
					},
					{
						"name": "HiveOutputfiles",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "Pig_Data_Transfrm",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "HiveOutputOverdueFiles",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"exists"
							]
						}
					},
					{
						"name": "DeleteHiveOutputIfExists",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "HiveOutputfiles",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@activity('HiveOutputfiles').output.exists",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Delete1",
									"description": "It will delete all pig output folders from Blob storage",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "DeletePigOutputFolders",
											"type": "DatasetReference",
											"parameters": {}
										},
										"recursive": true,
										"logStorageSettings": {
											"linkedServiceName": {
												"referenceName": "AzureBlobStorage_LinkedService",
												"type": "LinkedServiceReference"
											},
											"path": "delete-logs"
										},
										"enableLogging": true
									}
								}
							]
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Film_OnPrem')]",
				"[concat(variables('factoryId'), '/datasets/Film_Blob_Storage')]",
				"[concat(variables('factoryId'), '/datasets/Customer_OnPrem')]",
				"[concat(variables('factoryId'), '/datasets/Customer_Blob_Storage')]",
				"[concat(variables('factoryId'), '/datasets/Inventory_OnPrem')]",
				"[concat(variables('factoryId'), '/datasets/Inventory_Blob_Storage')]",
				"[concat(variables('factoryId'), '/datasets/Rental_OnPrem')]",
				"[concat(variables('factoryId'), '/datasets/Rental_Blob_Storage')]",
				"[concat(variables('factoryId'), '/datasets/Address_OnPrem')]",
				"[concat(variables('factoryId'), '/datasets/Address_Blob_Storage')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage_LinkedService')]",
				"[concat(variables('factoryId'), '/linkedServices/HDInsight_Linked_Service')]",
				"[concat(variables('factoryId'), '/datasets/DeleteHiveOutputFolders')]",
				"[concat(variables('factoryId'), '/datasets/PigAddressOutputFile')]",
				"[concat(variables('factoryId'), '/datasets/HiveOutputOverdueFiles')]",
				"[concat(variables('factoryId'), '/datasets/DeletePigOutputFolders')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Address_Blob_Storage')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage_LinkedService",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureBlob",
				"typeProperties": {
					"format": {
						"type": "TextFormat",
						"columnDelimiter": ",",
						"rowDelimiter": "",
						"nullValue": "NO_DATA",
						"treatEmptyAsNull": true,
						"skipLineCount": 0,
						"firstRowAsHeader": false
					},
					"fileName": {
						"value": "[parameters('Address_Blob_Storage_properties_typeProperties_fileName')]",
						"type": "Expression"
					},
					"folderPath": "[parameters('Address_Blob_Storage_properties_typeProperties_folderPath')]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage_LinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Address_OnPrem')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "OnPrem_MySQL_Linked_Service",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "RelationalTable",
				"typeProperties": {
					"tableName": "`address`"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/OnPrem_MySQL_Linked_Service')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Customer_Blob_Storage')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage_LinkedService",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureBlob",
				"typeProperties": {
					"format": {
						"type": "TextFormat",
						"columnDelimiter": ",",
						"rowDelimiter": "",
						"nullValue": "NO_DATA",
						"treatEmptyAsNull": true,
						"skipLineCount": 0,
						"firstRowAsHeader": false
					},
					"fileName": {
						"value": "[parameters('Customer_Blob_Storage_properties_typeProperties_fileName')]",
						"type": "Expression"
					},
					"folderPath": "[parameters('Customer_Blob_Storage_properties_typeProperties_folderPath')]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage_LinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Customer_OnPrem')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "OnPrem_MySQL_Linked_Service",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "RelationalTable",
				"structure": [
					{
						"name": "customer_id",
						"type": "Int32"
					},
					{
						"name": "store_id",
						"type": "Byte"
					},
					{
						"name": "first_name",
						"type": "String"
					},
					{
						"name": "last_name",
						"type": "String"
					},
					{
						"name": "email",
						"type": "String"
					},
					{
						"name": "address_id",
						"type": "Int32"
					},
					{
						"name": "active",
						"type": "Int16"
					},
					{
						"name": "create_date",
						"type": "DateTime"
					},
					{
						"name": "last_update",
						"type": "DateTime"
					}
				],
				"typeProperties": {
					"tableName": "`customer`"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/OnPrem_MySQL_Linked_Service')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DeleteHiveOutputFolders')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage_LinkedService",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureBlob",
				"typeProperties": {
					"format": {
						"type": "TextFormat",
						"columnDelimiter": ",",
						"rowDelimiter": "",
						"nullValue": "\\N",
						"treatEmptyAsNull": true,
						"skipLineCount": 0,
						"firstRowAsHeader": false
					},
					"fileName": "[parameters('DeleteHiveOutputFolders_properties_typeProperties_fileName')]",
					"folderPath": "[parameters('DeleteHiveOutputFolders_properties_typeProperties_folderPath')]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage_LinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DeletePigOutputFolders')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage_LinkedService",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureBlob",
				"typeProperties": {
					"format": {
						"type": "TextFormat",
						"columnDelimiter": ",",
						"rowDelimiter": "",
						"nullValue": "\\N",
						"treatEmptyAsNull": true,
						"skipLineCount": 0,
						"firstRowAsHeader": false
					},
					"folderPath": "[parameters('DeletePigOutputFolders_properties_typeProperties_folderPath')]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage_LinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Film_Blob_Storage')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage_LinkedService",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureBlob",
				"typeProperties": {
					"format": {
						"type": "TextFormat",
						"columnDelimiter": ",",
						"rowDelimiter": "",
						"nullValue": "NO_DATA",
						"treatEmptyAsNull": true,
						"skipLineCount": 0,
						"firstRowAsHeader": false
					},
					"fileName": {
						"value": "[parameters('Film_Blob_Storage_properties_typeProperties_fileName')]",
						"type": "Expression"
					},
					"folderPath": "[parameters('Film_Blob_Storage_properties_typeProperties_folderPath')]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage_LinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Film_OnPrem')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "OnPrem_MySQL_Linked_Service",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "RelationalTable",
				"structure": [
					{
						"name": "film_id",
						"type": "Int32"
					},
					{
						"name": "title",
						"type": "String"
					},
					{
						"name": "description",
						"type": "String"
					},
					{
						"name": "release_year",
						"type": "Int32"
					},
					{
						"name": "language_id",
						"type": "Byte"
					},
					{
						"name": "original_language_id",
						"type": "Byte"
					},
					{
						"name": "rental_duration",
						"type": "Byte"
					},
					{
						"name": "rental_rate",
						"type": "Decimal"
					},
					{
						"name": "length",
						"type": "Int32"
					},
					{
						"name": "replacement_cost",
						"type": "Decimal"
					},
					{
						"name": "rating",
						"type": "String"
					},
					{
						"name": "special_features",
						"type": "String"
					},
					{
						"name": "last_update",
						"type": "DateTime"
					}
				],
				"typeProperties": {
					"tableName": "`film`"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/OnPrem_MySQL_Linked_Service')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HiveOutputOverdueFiles')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage_LinkedService",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureBlob",
				"typeProperties": {
					"format": {
						"type": "TextFormat",
						"columnDelimiter": ",",
						"rowDelimiter": "",
						"nullValue": "\\N",
						"treatEmptyAsNull": true,
						"skipLineCount": 0,
						"firstRowAsHeader": false
					},
					"fileName": "[parameters('HiveOutputOverdueFiles_properties_typeProperties_fileName')]",
					"folderPath": "[parameters('HiveOutputOverdueFiles_properties_typeProperties_folderPath')]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage_LinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Inventory_Blob_Storage')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage_LinkedService",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureBlob",
				"typeProperties": {
					"format": {
						"type": "TextFormat",
						"columnDelimiter": ",",
						"rowDelimiter": "",
						"nullValue": "NO_DATA",
						"treatEmptyAsNull": true,
						"skipLineCount": 0,
						"firstRowAsHeader": false
					},
					"fileName": {
						"value": "[parameters('Inventory_Blob_Storage_properties_typeProperties_fileName')]",
						"type": "Expression"
					},
					"folderPath": "[parameters('Inventory_Blob_Storage_properties_typeProperties_folderPath')]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage_LinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Inventory_OnPrem')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "OnPrem_MySQL_Linked_Service",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "RelationalTable",
				"structure": [
					{
						"name": "inventory_id",
						"type": "Int64"
					},
					{
						"name": "film_id",
						"type": "Int32"
					},
					{
						"name": "store_id",
						"type": "Byte"
					},
					{
						"name": "last_update",
						"type": "DateTime"
					}
				],
				"typeProperties": {
					"tableName": "`inventory`"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/OnPrem_MySQL_Linked_Service')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PigAddressOutputFile')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage_LinkedService",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureBlob",
				"typeProperties": {
					"format": {
						"type": "TextFormat",
						"columnDelimiter": ",",
						"rowDelimiter": "",
						"nullValue": "\\N",
						"treatEmptyAsNull": true,
						"skipLineCount": 0,
						"firstRowAsHeader": false
					},
					"fileName": "[parameters('PigAddressOutputFile_properties_typeProperties_fileName')]",
					"folderPath": "[parameters('PigAddressOutputFile_properties_typeProperties_folderPath')]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage_LinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Rental_Blob_Storage')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage_LinkedService",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureBlob",
				"typeProperties": {
					"format": {
						"type": "TextFormat",
						"columnDelimiter": ",",
						"rowDelimiter": "",
						"nullValue": "NO_DATA",
						"treatEmptyAsNull": true,
						"skipLineCount": 0,
						"firstRowAsHeader": false
					},
					"fileName": {
						"value": "[parameters('Rental_Blob_Storage_properties_typeProperties_fileName')]",
						"type": "Expression"
					},
					"folderPath": "[parameters('Rental_Blob_Storage_properties_typeProperties_folderPath')]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage_LinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Rental_OnPrem')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "OnPrem_MySQL_Linked_Service",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "RelationalTable",
				"typeProperties": {
					"tableName": "`rental`"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/OnPrem_MySQL_Linked_Service')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage_LinkedService')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage_LinkedService_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlob_HDInsight_LinkedService')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlob_HDInsight_LinkedService_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/HDInsight_Linked_Service')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "HDInsightOnDemand",
				"typeProperties": {
					"clusterType": "hadoop",
					"clusterSize": 5,
					"timeToLive": "00:40:00",
					"version": "3.6",
					"hostSubscriptionId": "[parameters('HDInsight_Linked_Service_properties_typeProperties_hostSubscriptionId')]",
					"clusterResourceGroup": "[parameters('HDInsight_Linked_Service_properties_typeProperties_clusterResourceGroup')]",
					"servicePrincipalId": "[parameters('HDInsight_Linked_Service_properties_typeProperties_servicePrincipalId')]",
					"osType": "Linux",
					"tenant": "[parameters('HDInsight_Linked_Service_properties_typeProperties_tenant')]",
					"clusterNamePrefix": "hdi-adf-cluster-",
					"clusterUserName": "[parameters('HDInsight_Linked_Service_properties_typeProperties_clusterUserName')]",
					"clusterPassword": {
						"type": "SecureString",
						"value": "[parameters('HDInsight_Linked_Service_clusterPassword')]"
					},
					"clusterSshUserName": "[parameters('HDInsight_Linked_Service_properties_typeProperties_clusterSshUserName')]",
					"clusterSshPassword": {
						"type": "SecureString",
						"value": "[parameters('HDInsight_Linked_Service_clusterSshPassword')]"
					},
					"servicePrincipalKey": {
						"type": "SecureString",
						"value": "[parameters('HDInsight_Linked_Service_servicePrincipalKey')]"
					},
					"additionalLinkedServiceNames": [
						{
							"referenceName": "AzureBlobStorage_LinkedService",
							"type": "LinkedServiceReference"
						}
					],
					"linkedServiceName": {
						"referenceName": "AzureBlob_HDInsight_LinkedService",
						"type": "LinkedServiceReference"
					},
					"headNodeSize": "",
					"dataNodeSize": "",
					"zookeeperNodeSize": "",
					"subnetName": "",
					"virtualNetworkId": ""
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage_LinkedService')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureBlob_HDInsight_LinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/OnPrem_MySQL_Linked_Service')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "MySql",
				"typeProperties": {
					"connectionString": "[parameters('OnPrem_MySQL_Linked_Service_connectionString')]"
				},
				"connectVia": {
					"referenceName": "On-Prem-Data-Gateway",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/On-Prem-Data-Gateway')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Trigger-On-Prem-to-Cloud-Every-Hour')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "MySQLToBlobToHDInsight",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2019-04-07T11:39:00.000Z",
						"endTime": "2019-04-09T23:39:00.000Z",
						"timeZone": "UTC"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/MySQLToBlobToHDInsight')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/On-Prem-Data-Gateway')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		}
	]
}